version: 2
jobs:
  build:
    machine: true
    steps:
    - checkout

    - run:
        name: Get architect binary
        command: |
          wget -q $(curl -sS -H "Authorization: token $RELEASE_TOKEN" https://api.github.com/repos/giantswarm/architect/releases/latest | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
          chmod +x ./architect
          ./architect version

    - run: ./architect build

    - persist_to_workspace:
        root: .
        paths:
        - ./architect

  e2eTest:
    machine: true
    working_directory: /home/circleci/.go_workspace/src/github.com/giantswarm/kubernetes-nginx-ingress-controller
    steps:
    - checkout

    - attach_workspace:
        at: .

    - run:
        name: Get e2e-harness binary
        command: |
          wget -q $(curl -sS https://api.github.com/repos/giantswarm/e2e-harness/releases/latest | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
          chmod +x ./e2e-harness

    - run:
        name: Setup localkube in circleCI machine
        command: ./e2e-harness localkube

    - run: ./e2e-harness setup --remote=false

    - run:
        name: Publish chart to CNR using a temporary channel for testing
        command: ./architect publish --pipeline=false --channels=${CIRCLE_SHA1}

    - run: ./e2e-harness test --test-dir="integration/test/basic"

    - run:
        name: Finish with cleanup, no matter if the test succeeded or not
        command: |
          ./architect unpublish --channels=${CIRCLE_SHA1}
          ./e2e-harness teardown
        when: always

  deploy:
    machine: true
    steps:
    - checkout

    - attach_workspace:
        at: .

    - run: ./architect deploy

    - run:
        name: Publish chart to beta channel on CNR
        command: ./architect publish

  publish_to_stable:
    machine: true
    steps:
    - checkout

    - attach_workspace:
        at: .

    - run: ./architect publish --stable

workflows:
  version: 2
  build_e2e:
    jobs:
      - build

      - e2eTest:
          requires:
          - build

      - deploy:
          filters:
            branches:
              only: master
          requires:
          - e2eTest

      - publish_to_stable:
          filters:
            branches:
              only: master
          requires:
          - deploy
