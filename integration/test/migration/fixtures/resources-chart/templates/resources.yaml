apiVersion: v1
kind: Service
metadata:
  name: nginx-ingress-controller
  namespace: kube-system
  labels:
    k8s-app: nginx-ingress-controller
    kind: legacy
spec:
  ports:
  - port: 10301
  selector:
    k8s-app: nginx-ingress-controller
    kind: legacy
---
apiVersion: v1
kind: Service
metadata:
  name: default-http-backend
  namespace: kube-system
  labels:
    k8s-app: default-http-backend
    kind: legacy
spec:
  ports:
  - port: 10301
  selector:
    k8s-app: default-http-backend
    kind: legacy
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nginx-ingress-controller
  namespace: kube-system
  labels:
    k8s-app: nginx-ingress-controller
    kind: legacy
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ingress-nginx
  namespace: kube-system
  labels:
    k8s-addon: ingress-nginx.addons.k8s.io
    kind: legacy
data:
  enable-vts-status: "true"
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: nginx-ingress-controller
  namespace: kube-system
  labels:
    k8s-app: nginx-ingress-controller
    kind: legacy
spec:
  replicas: 3
  template:
    metadata:
      labels:
        k8s-app: nginx-ingress-controller
    spec:
      containers:
      - name: nginx-ingress-controller
        image: quay.io/giantswarm/nginx-ingress-controller:v1.3.1
        resources:
          requests:
            cpu: 50m
            memory: 75Mi
      serviceAccountName: nginx-ingress-controller
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: default-http-backend
  namespace: kube-system
  labels:
    k8s-app: default-http-backend
    kind: legacy
spec:
  replicas: 0
  template:
    metadata:
      labels:
        k8s-app: default-http-backend
    spec:
      containers:
      - name: nginx-ingress-controller
        image: quay.io/giantswarm/nginx-ingress-controller:v1.3.1
        resources:
          requests:
            cpu: 50m
            memory: 75Mi
      serviceAccountName: nginx-ingress-controller
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: nginx-ingress-controller
  labels:
    k8s-app: nginx-ingress-controller
    kind: legacy
subjects:
  - kind: ServiceAccount
    name: nginx-ingress-controller
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: nginx-ingress-controller
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nginx-ingress-controller
  labels:
    k8s-app: nginx-ingress-controller
    kind: legacy
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: nginx-ingress-controller
  namespace: kube-system
  labels:
    k8s-app: nginx-ingress-controller
    kind: legacy
subjects:
  - kind: ServiceAccount
    name: nginx-ingress-controller
    namespace: kube-system
roleRef:
  kind: Role
  name: nginx-ingress-controller
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: nginx-ingress-controller
  namespace: kube-system
  labels:
    k8s-app: nginx-ingress-controller
    kind: legacy
