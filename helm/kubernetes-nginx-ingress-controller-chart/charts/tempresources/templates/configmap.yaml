{{- if .Values.global.migration.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "-12"
    "helm.sh/hook-delete-policy": "hook-succeeded,hook-failed"
  labels:
    app: {{ .Values.name }}
    giantswarm.io/service-type: "managed"
data:
  config.yaml: |
    service:
      cnr:
        address: "{{ .Values.cnr.address }}"
        organization: "{{ .Values.cnr.organization }}"
      create:
        chart:
          channelName: "{{ .Values.create.chart.channelName }}"
          chartName: "{{ .Values.create.chart.chartName }}"
          namespace: "{{ .Values.create.chart.namespace }}"
          releaseName: "{{ .Values.create.chart.releaseName }}"
          valuesFile: "/var/run/{{ .Values.name }}/configmap/values.json"
      helm:
        tillerNamespace:  "{{ .Values.helm.tillerNamespace }}"
      kubernetes:
        address: ''
        inCluster: true
        tls:
          caFile: ''
          crtFile: ''
          keyFile: ''
  values.json: |
    {
      "controller": {
        "name": "{{ .Values.controller.name }}",
        "replicas": "{{ .Values.global.controller.tempReplicas }}",
        "configmap": {
          "name": "{{ .Values.controller.configmap.name }}"
        },
        "role": {
          "name": "{{ .Values.controller.role.name }}"
        },
        "service": {
          "enabled": false,
        },
      },
      "defaultBackend": {
        "name": "{{ .Values.defaultBackend.name }}"
      },
      "global": {
        "controller": {
          "useProxyProtocol": {{ .Values.global.controller.useProxyProtocol }}
        },
        "migration": {
          "enabled": false
        }
      },
      "test": {
        "enabled": false
      }
    }

{{- end }}
